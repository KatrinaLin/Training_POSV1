# input
[
    'ITEM000001',
    'ITEM000001',
    'ITEM000001',
    'ITEM000001',
    'ITEM000001',
    'ITEM000003-2',
    'ITEM000005',
    'ITEM000005',
    'ITEM000005'
]

# 1. group Item
    [] parse barcode
    [] group item

# input
[
    'ITEM000001',
    'ITEM000001',
    'ITEM000001',
    'ITEM000001',
    'ITEM000001',
    'ITEM000003-2',
    'ITEM000005',
    'ITEM000005',
    'ITEM000005'
]

# output
[
    {
        barcode: 'ITEM000001',
        count: 5,
    },
    {
        barcode: 'ITEM000003',
        count: 2,
    },
    {
        barcode: 'ITEM000005',
        count: 3,
    }
]

# 2. getItemSummary
# input
[
    {
        barcode: 'ITEM000001',
        count: 5,
    },
    {
        barcode: 'ITEM000003',
        count: 2,
    },
    {
        barcode: 'ITEM000005',
        count: 3,
    }
]
[
    {
        barcode: 'ITEM000000',
        name: '可口可乐',
        unit: '瓶',
        price: 3.00
    },
    {
        ...item1
    },
    {
        ...itemN
    }
]

# output
[
    {
        barcode: String,
        count: Number,
        name: String,
        unit: String,
        price: Number,
    },
    {
        ...
    },
    {
        ...
    }
]

# 3. calculatePromotedSubtotal
# input: loadPromotions() & input from #2
[
   {
     type: 'BUY_TWO_GET_ONE_FREE',
     barcodes: [
       'ITEM000000',
       'ITEM000001'
     ]
   },
   {
     type: 'OTHER_PROMOTION',
     barcodes: [
       'ITEM000003',
       'ITEM000004'
     ]
   }
]

# output
[
    itemsSold:
    [
        {
            barcode: String,
            count: Number,
            name: String,
            unit: String,
            price: Number,
            promotedCount: Number,
            subtotal: Number,
        },
    ],
    total: Number,
    totalSave: Number,
]

# final output
***<没钱赚商店>购物清单***
名称：可口可乐，数量：3瓶，单价：3.00(元)，小计：6.00(元)
名称：羽毛球，数量：5个，单价：1.00(元)，小计：4.00(元)
名称：苹果，数量：2斤，单价：5.50(元)，小计：11.00(元)
----------------------
挥泪赠送商品：
名称：可口可乐，数量：1瓶
名称：羽毛球，数量：1个
----------------------
总计：21.00(元)
节省：4.00(元)
**********************